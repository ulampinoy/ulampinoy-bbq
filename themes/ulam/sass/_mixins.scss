
/**
    https://github.com/sass-mq/sass-mq

    Convert pixels to rems.

    @param {Number} $px - value to convert
    @param {Number} $base-font-size ($base-font-size) - `<body>` font size

    @example scss
        $font-size-in-rems: px2rem(16px);
        p { font-size: px2rem(16px); }

    @requires $base-font-size
    @returns {Number}
*/
@function px2rem($px, $base-font-size: $base-font-size) {
    @if unitless($px) {
        // @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
        @return px2rem($px * 1px, $base-font-size);
    }
    @else if unit($px) == rem {
        @return $px;
    }
    @return ($px / $base-font-size) * 1rem;
}

// shortcut for above function
@function rem($px) {
    @return px2rem($px);
}

/**
    Same as above but for ems
*/
@function px2em($px, $base-font-size: $base-font-size) {
    @if unitless($px) {
        // @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
        @return px2em($px * 1px, $base-font-size);
    }
    @else if unit($px) == em {
        @return $px;
    }
    @return ($px / $base-font-size) * 1em;
}

// shortcut for above function
@function em($px) {
    @return px2em($px);
}



/* Converts pixels to rems based on the base font size */
@mixin font-size($px) {
    font-size: px2rem($px);
}

/*Font size and line height px to rems*/
@mixin font($size-px, $line-height-px: false) {
    @include font-size($size-px);
    @if $line-height-px {
        line-height: ($line-height-px / $size-px); // line height in px is relative to the current fonts size, not the base font size
    }
}
